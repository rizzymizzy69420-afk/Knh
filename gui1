-- Ultimate UI Designer Pro - Studio Edition
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local TextService = game:GetService("TextService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Modern color palette
local colors = {
    background = Color3.fromRGB(18, 20, 26),
    primary = Color3.fromRGB(0, 170, 255),
    secondary = Color3.fromRGB(35, 40, 55),
    accent = Color3.fromRGB(255, 85, 127),
    text = Color3.fromRGB(240, 240, 240),
    darkText = Color3.fromRGB(30, 30, 30),
    success = Color3.fromRGB(85, 255, 170),
    warning = Color3.fromRGB(255, 200, 100),
    error = Color3.fromRGB(255, 85, 85),
    highlight = Color3.fromRGB(100, 200, 255),
    panel = Color3.fromRGB(30, 33, 40),
    sidebar = Color3.fromRGB(25, 27, 35),
    propertyHeader = Color3.fromRGB(45, 50, 65),
    propertyItem = Color3.fromRGB(40, 45, 60),
    explorerItem = Color3.fromRGB(50, 55, 70),
    explorerHighlight = Color3.fromRGB(60, 65, 80)
}

-- Modern glass effect function
local function createGlassFrame(parent, size, position, transparency)
    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = colors.panel
    frame.BackgroundTransparency = transparency or 0.1
    frame.BorderSizePixel = 0
    frame.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(70, 80, 100)
    stroke.Thickness = 1
    stroke.Transparency = 0.7
    stroke.Parent = frame
    
    return frame
end

-- Main UI Designer GUI
local designerGui = Instance.new("ScreenGui")
designerGui.Name = "UIDesignerProStudio"
designerGui.ResetOnSpawn = false
designerGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
designerGui.Parent = CoreGui

-- Main Container with Glass Morphism Effect
local mainContainer = createGlassFrame(designerGui, UDim2.new(0, 1000, 0, 700), UDim2.new(0.5, -500, 0.5, -350))

-- Drop Shadow
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Position = UDim2.new(0, -15, 0, -15)
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.8
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.ZIndex = -1
shadow.Parent = mainContainer

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = colors.primary
titleBar.BorderSizePixel = 0
titleBar.Parent = mainContainer

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

-- Title Text
local titleText = Instance.new("TextLabel")
titleText.Name = "TitleText"
titleText.Size = UDim2.new(1, -100, 1, 0)
titleText.Position = UDim2.new(0, 20, 0, 0)
titleText.Text = "UI DESIGNER PRO - Studio Edition"
titleText.TextColor3 = colors.text
titleText.BackgroundTransparency = 1
titleText.Font = Enum.Font.GothamBold
titleText.TextSize = 18
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Parent = titleBar

-- Control Buttons
local controlButtons = Instance.new("Frame")
controlButtons.Name = "ControlButtons"
controlButtons.Size = UDim2.new(0, 100, 0, 30)
controlButtons.Position = UDim2.new(1, -110, 0, 5)
controlButtons.BackgroundTransparency = 1
controlButtons.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(0, 0, 0, 0)
minimizeButton.Text = "─"
minimizeButton.TextColor3 = colors.text
minimizeButton.BackgroundColor3 = colors.secondary
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 16
minimizeButton.Parent = controlButtons

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 6)
minimizeCorner.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(0, 40, 0, 0)
closeButton.Text = "✕"
closeButton.TextColor3 = colors.text
closeButton.BackgroundColor3 = colors.accent
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14
closeButton.Parent = controlButtons

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Button hover effects
local function addHoverEffect(button, hoverColor, normalColor)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = normalColor}):Play()
    end)
end

addHoverEffect(closeButton, Color3.fromRGB(255, 100, 130), colors.accent)
addHoverEffect(minimizeButton, Color3.fromRGB(100, 110, 130), colors.secondary)

-- Main content area
local mainContent = Instance.new("Frame")
mainContent.Name = "MainContent"
mainContent.Size = UDim2.new(1, 0, 1, -50)
mainContent.Position = UDim2.new(0, 0, 0, 50)
mainContent.BackgroundTransparency = 1
mainContent.Parent = mainContainer

-- Explorer Panel (Studio-like)
local explorerPanel = createGlassFrame(mainContent, UDim2.new(0.25, -5, 1, 0), UDim2.new(0, 0, 0, 0))
explorerPanel.Name = "ExplorerPanel"

local explorerHeader = Instance.new("Frame")
explorerHeader.Size = UDim2.new(1, 0, 0, 30)
explorerHeader.BackgroundColor3 = colors.propertyHeader
explorerHeader.BorderSizePixel = 0
explorerHeader.Parent = explorerPanel

local explorerTitle = Instance.new("TextLabel")
explorerTitle.Size = UDim2.new(1, -10, 1, 0)
explorerTitle.Position = UDim2.new(0, 10, 0, 0)
explorerTitle.Text = "EXPLORER"
explorerTitle.TextColor3 = colors.primary
explorerTitle.BackgroundTransparency = 1
explorerTitle.Font = Enum.Font.GothamBold
explorerTitle.TextSize = 14
explorerTitle.TextXAlignment = Enum.TextXAlignment.Left
explorerTitle.Parent = explorerHeader

local explorerScroll = Instance.new("ScrollingFrame")
explorerScroll.Size = UDim2.new(1, 0, 1, -40)
explorerScroll.Position = UDim2.new(0, 0, 0, 30)
explorerScroll.BackgroundTransparency = 1
explorerScroll.ScrollBarThickness = 8
explorerScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
explorerScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
explorerScroll.Parent = explorerPanel

-- Properties Panel
local propertiesPanel = createGlassFrame(mainContent, UDim2.new(0.25, -5, 1, 0), UDim2.new(0.75, 5, 0, 0))
propertiesPanel.Name = "PropertiesPanel"

local propertiesHeader = Instance.new("Frame")
propertiesHeader.Size = UDim2.new(1, 0, 0, 30)
propertiesHeader.BackgroundColor3 = colors.propertyHeader
propertiesHeader.BorderSizePixel = 0
propertiesHeader.Parent = propertiesPanel

local propertiesTitle = Instance.new("TextLabel")
propertiesTitle.Size = UDim2.new(1, -10, 1, 0)
propertiesTitle.Position = UDim2.new(0, 10, 0, 0)
propertiesTitle.Text = "PROPERTIES"
propertiesTitle.TextColor3 = colors.primary
propertiesTitle.BackgroundTransparency = 1
propertiesTitle.Font = Enum.Font.GothamBold
propertiesTitle.TextSize = 14
propertiesTitle.TextXAlignment = Enum.TextXAlignment.Left
propertiesTitle.Parent = propertiesHeader

local propertiesScroll = Instance.new("ScrollingFrame")
propertiesScroll.Size = UDim2.new(1, 0, 1, -40)
propertiesScroll.Position = UDim2.new(0, 0, 0, 30)
propertiesScroll.BackgroundTransparency = 1
propertiesScroll.ScrollBarThickness = 8
propertiesScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
propertiesScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
propertiesScroll.Parent = propertiesPanel

-- Workspace Panel
local workspacePanel = createGlassFrame(mainContent, UDim2.new(0.5, -10, 1, 0), UDim2.new(0.25, 5, 0, 0))
workspacePanel.Name = "WorkspacePanel"

local workspaceHeader = Instance.new("Frame")
workspaceHeader.Size = UDim2.new(1, 0, 0, 30)
workspaceHeader.BackgroundColor3 = colors.propertyHeader
workspaceHeader.BorderSizePixel = 0
workspaceHeader.Parent = workspacePanel

local workspaceTitle = Instance.new("TextLabel")
workspaceTitle.Size = UDim2.new(1, -10, 1, 0)
workspaceTitle.Position = UDim2.new(0, 10, 0, 0)
workspaceTitle.Text = "WORKSPACE"
workspaceTitle.TextColor3 = colors.primary
workspaceTitle.BackgroundTransparency = 1
workspaceTitle.Font = Enum.Font.GothamBold
workspaceTitle.TextSize = 14
workspaceTitle.TextXAlignment = Enum.TextXAlignment.Left
workspaceTitle.Parent = workspaceHeader

-- UI Canvas for created elements
local uiCanvas = Instance.new("ScreenGui")
uiCanvas.Name = "UICanvas"
uiCanvas.ResetOnSpawn = false
uiCanvas.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
uiCanvas.Parent = playerGui

-- Currently selected element
local selectedElement = nil
local dragHandleSize = 24
local selectionBox = nil

-- Function to refresh explorer
function refreshExplorer()
    explorerScroll:ClearAllChildren()
    
    local function createTreeItem(element, depth, parentFrame)
        local itemFrame = Instance.new("Frame")
        itemFrame.Size = UDim2.new(1, -depth * 15, 0, 25)
        itemFrame.Position = UDim2.new(0, depth * 15, 0, #parentFrame:GetChildren() * 25)
        itemFrame.BackgroundTransparency = 1
        itemFrame.Parent = parentFrame
        
        local expandButton = Instance.new("TextButton")
        expandButton.Size = UDim2.new(0, 20, 0, 20)
        expandButton.Position = UDim2.new(0, 0, 0.5, -10)
        expandButton.Text = "▶"
        expandButton.TextColor3 = colors.text
        expandButton.BackgroundTransparency = 1
        expandButton.Font = Enum.Font.GothamBold
        expandButton.TextSize = 10
        expandButton.Visible = #element:GetChildren() > 0
        expandButton.Parent = itemFrame
        
        local icon = Instance.new("TextLabel")
        icon.Size = UDim2.new(0, 20, 0, 20)
        icon.Position = UDim2.new(0, 20, 0.5, -10)
        
        -- Set icon based on element type
        if element:IsA("TextButton") then
            icon.Text = "🔘"
        elseif element:IsA("TextLabel") then
            icon.Text = "📝"
        elseif element:IsA("Frame") then
            icon.Text = "⬜"
        elseif element:IsA("ImageLabel") then
            icon.Text = "🖼️"
        elseif element:IsA("ScrollingFrame") then
            icon.Text = "📜"
        elseif element:IsA("LocalScript") then
            icon.Text = "💻"
        elseif element:IsA("ModuleScript") then
            icon.Text = "📦"
        else
            icon.Text = "📄"
        end
        
        icon.TextColor3 = element == selectedElement and colors.primary or colors.text
        icon.BackgroundTransparency = 1
        icon.Font = Enum.Font.Gotham
        icon.TextSize = 14
        icon.Parent = itemFrame
        
        local nameLabel = Instance.new("TextButton")
        nameLabel.Size = UDim2.new(1, -40, 1, 0)
        nameLabel.Position = UDim2.new(0, 40, 0, 0)
        nameLabel.Text = element.Name
        nameLabel.TextColor3 = element == selectedElement and colors.primary or colors.text
        nameLabel.BackgroundTransparency = 1
        nameLabel.Font = Enum.Font.Gotham
        nameLabel.TextSize = 14
        nameLabel.TextXAlignment = Enum.TextXAlignment.Left
        nameLabel.Parent = itemFrame
        
        -- Highlight on hover
        nameLabel.MouseEnter:Connect(function()
            if element ~= selectedElement then
                nameLabel.TextColor3 = colors.highlight
            end
        end)
        
        nameLabel.MouseLeave:Connect(function()
            if element ~= selectedElement then
                nameLabel.TextColor3 = colors.text
            end
        end)
        
        -- Select element on click
        nameLabel.MouseButton1Click:Connect(function()
            selectElement(element)
        end)
        
        -- Double click to open scripts
        local lastClickTime = 0
        nameLabel.MouseButton1Click:Connect(function()
            local currentTime = tick()
            if currentTime - lastClickTime < 0.3 then
                if element:IsA("LocalScript") or element:IsA("ModuleScript") then
                    openScriptEditor(element)
                end
            end
            lastClickTime = currentTime
        end)
        
        -- Expand/collapse children
        local childrenVisible = false
        local childrenContainer = Instance.new("Frame")
        childrenContainer.Size = UDim2.new(1, 0, 0, 0)
        childrenContainer.Position = UDim2.new(0, 0, 1, 0)
        childrenContainer.BackgroundTransparency = 1
        childrenContainer.Visible = false
        childrenContainer.Parent = itemFrame
        
        expandButton.MouseButton1Click:Connect(function()
            childrenVisible = not childrenVisible
            childrenContainer.Visible = childrenVisible
            
            if childrenVisible then
                expandButton.Text = "▼"
                for _, child in ipairs(element:GetChildren()) do
                    createTreeItem(child, depth + 1, childrenContainer)
                end
            else
                expandButton.Text = "▶"
                childrenContainer:ClearAllChildren()
            end
        end)
    end
    
    -- Add UI Canvas to explorer
    createTreeItem(uiCanvas, 0, explorerScroll)
    
    -- Add children of UI Canvas
    for _, element in ipairs(uiCanvas:GetChildren()) do
        createTreeItem(element, 1, explorerScroll)
    end
end

-- Function to open script editor
function openScriptEditor(scriptInstance)
    -- Create editor window
    local editorWindow = createGlassFrame(designerGui, UDim2.new(0.6, 0, 0.7, 0), UDim2.new(0.2, 0, 0.15, 0), 0.05)
    editorWindow.BackgroundColor3 = colors.panel
    editorWindow.ZIndex = 1000
    
    -- Title
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = colors.primary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = editorWindow
    
    local titleText = Instance.new("TextLabel")
    titleText.Size = UDim2.new(1, -40, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.Text = "Script Editor: " .. scriptInstance.Name
    titleText.TextColor3 = colors.text
    titleText.BackgroundTransparency = 1
    titleText.Font = Enum.Font.GothamBold
    titleText.TextSize = 14
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = titleBar
    
    -- Close button
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 0)
    closeButton.Text = "✕"
    closeButton.TextColor3 = colors.text
    closeButton.BackgroundColor3 = colors.accent
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 14
    closeButton.Parent = titleBar
    
    closeButton.MouseButton1Click:Connect(function()
        editorWindow:Destroy()
    end)
    
    -- Script content
    local scriptScroll = Instance.new("ScrollingFrame")
    scriptScroll.Size = UDim2.new(1, -10, 1, -80)
    scriptScroll.Position = UDim2.new(0, 5, 0, 35)
    scriptScroll.BackgroundColor3 = Color3.fromRGB(30, 35, 45)
    scriptScroll.BorderSizePixel = 0
    scriptScroll.ScrollBarThickness = 8
    scriptScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scriptScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scriptScroll.Parent = editorWindow
    
    local scriptInput = Instance.new("TextBox")
    scriptInput.Size = UDim2.new(1, 0, 1, 0)
    scriptInput.Text = scriptInstance.Source
    scriptInput.TextColor3 = colors.text
    scriptInput.BackgroundTransparency = 1
    scriptInput.TextXAlignment = Enum.TextXAlignment.Left
    scriptInput.TextYAlignment = Enum.TextYAlignment.Top
    scriptInput.Font = Enum.Font.Code
    scriptInput.TextSize = 14
    scriptInput.TextWrapped = true
    scriptInput.MultiLine = true
    scriptInput.ClearTextOnFocus = false
    scriptInput.Parent = scriptScroll
    
    -- Buttons
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Size = UDim2.new(1, -10, 0, 30)
    buttonContainer.Position = UDim2.new(0, 5, 1, -40)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.Parent = editorWindow
    
    local saveButton = Instance.new("TextButton")
    saveButton.Size = UDim2.new(0.4, -5, 1, 0)
    saveButton.Position = UDim2.new(0, 0, 0, 0)
    saveButton.Text = "💾 SAVE"
    saveButton.TextColor3 = colors.text
    saveButton.BackgroundColor3 = colors.success
    saveButton.Font = Enum.Font.GothamBold
    saveButton.TextSize = 14
    saveButton.Parent = buttonContainer
    
    local saveCorner = Instance.new("UICorner")
    saveCorner.CornerRadius = UDim.new(0, 6)
    saveCorner.Parent = saveButton
    
    local cancelButton = Instance.new("TextButton")
    cancelButton.Size = UDim2.new(0.4, -5, 1, 0)
    cancelButton.Position = UDim2.new(0.6, 5, 0, 0)
    cancelButton.Text = "❌ CANCEL"
    cancelButton.TextColor3 = colors.text
    cancelButton.BackgroundColor3 = colors.accent
    cancelButton.Font = Enum.Font.GothamBold
    cancelButton.TextSize = 14
    cancelButton.Parent = buttonContainer
    
    local cancelCorner = Instance.new("UICorner")
    cancelCorner.CornerRadius = UDim.new(0, 6)
    cancelCorner.Parent = cancelButton
    
    -- Button actions
    saveButton.MouseButton1Click:Connect(function()
        scriptInstance.Source = scriptInput.Text
        editorWindow:Destroy()
        showNotification("✅ Script saved successfully")
    end)
    
    cancelButton.MouseButton1Click:Connect(function()
        editorWindow:Destroy()
    end)
    
    -- Button hover effects
    addHoverEffect(saveButton, Color3.fromRGB(100, 255, 180), colors.success)
    addHoverEffect(cancelButton, Color3.fromRGB(255, 100, 130), colors.accent)
end

-- Function to refresh properties
function refreshProperties()
    propertiesScroll:ClearAllChildren()
    
    if not selectedElement then
        return
    end
    
    local yPos = 0
    
    -- Header with element info
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 40)
    header.Position = UDim2.new(0, 0, 0, yPos)
    header.BackgroundColor3 = colors.propertyHeader
    header.Parent = propertiesScroll
    
    local icon = Instance.new("TextLabel")
    icon.Size = UDim2.new(0, 30, 0, 30)
    icon.Position = UDim2.new(0, 5, 0.5, -15)
    
    -- Set icon based on element type
    if selectedElement:IsA("TextButton") then
        icon.Text = "🔘"
    elseif selectedElement:IsA("TextLabel") then
        icon.Text = "📝"
    elseif selectedElement:IsA("Frame") then
        icon.Text = "⬜"
    elseif selectedElement:IsA("ImageLabel") then
        icon.Text = "🖼️"
    elseif selectedElement:IsA("ScrollingFrame") then
        icon.Text = "📜"
    elseif selectedElement:IsA("LocalScript") then
        icon.Text = "💻"
    elseif selectedElement:IsA("ModuleScript") then
        icon.Text = "📦"
    else
        icon.Text = "📄"
    end
    
    icon.TextColor3 = colors.primary
    icon.BackgroundTransparency = 1
    icon.Font = Enum.Font.GothamBold
    icon.TextSize = 20
    icon.Parent = header
    
    local nameBox = Instance.new("TextBox")
    nameBox.Size = UDim2.new(1, -40, 0.5, 0)
    nameBox.Position = UDim2.new(0, 40, 0.25, 0)
    nameBox.Text = selectedElement.Name
    nameBox.TextColor3 = colors.primary
    nameBox.BackgroundTransparency = 1
    nameBox.Font = Enum.Font.GothamBold
    nameBox.TextSize = 16
    nameBox.TextXAlignment = Enum.TextXAlignment.Left
    nameBox.Parent = header
    
    nameBox.FocusLost:Connect(function()
        selectedElement.Name = nameBox.Text
        refreshExplorer()
    end)
    
    local classLabel = Instance.new("TextLabel")
    classLabel.Size = UDim2.new(1, -40, 0.5, 0)
    classLabel.Position = UDim2.new(0, 40, 0.5, 0)
    classLabel.Text = "Class: " .. selectedElement.ClassName
    classLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    classLabel.BackgroundTransparency = 1
    classLabel.Font = Enum.Font.Gotham
    classLabel.TextSize = 12
    classLabel.TextXAlignment = Enum.TextXAlignment.Left
    classLabel.Parent = header
    
    yPos = yPos + 45
    
    -- Common properties for all GUI objects
    if selectedElement:IsA("GuiObject") then
        local commonProperties = {
            "Size", "Position", "AnchorPoint", "BackgroundColor3", 
            "BackgroundTransparency", "BorderColor3", "BorderSizePixel", "Visible", "ZIndex"
        }
        
        -- Create property editors
        for _, propName in ipairs(commonProperties) do
            if selectedElement[propName] ~= nil then
                yPos = createPropertyEditor(propName, selectedElement[propName], yPos)
            end
        end
        
        -- Text-specific properties
        if selectedElement:IsA("TextLabel") or selectedElement:IsA("TextButton") or selectedElement:IsA("TextBox") then
            local textProperties = {"Text", "TextColor3", "TextSize", "Font", "TextScaled", "TextWrapped"}
            for _, propName in ipairs(textProperties) do
                if selectedElement[propName] ~= nil then
                    yPos = createPropertyEditor(propName, selectedElement[propName], yPos)
                end
            end
        end
        
        -- Image-specific properties
        if selectedElement:IsA("ImageLabel") or selectedElement:IsA("ImageButton") then
            local imageProperties = {"Image", "ImageColor3", "ImageTransparency", "ScaleType", "SliceCenter"}
            for _, propName in ipairs(imageProperties) do
                if selectedElement[propName] ~= nil then
                    yPos = createPropertyEditor(propName, selectedElement[propName], yPos)
                end
            end
        end
        
        -- Custom property: Draggable for Frames
        if selectedElement:IsA("Frame") then
            local draggable = selectedElement:GetAttribute("Draggable") or false
            
            local propFrame = Instance.new("Frame")
            propFrame.Size = UDim2.new(1, 0, 0, 30)
            propFrame.Position = UDim2.new(0, 0, 0, yPos)
            propFrame.BackgroundTransparency = 1
            propFrame.Parent = propertiesScroll
            
            local propLabel = Instance.new("TextLabel")
            propLabel.Size = UDim2.new(0.4, -5, 1, 0)
            propLabel.Position = UDim2.new(0, 0, 0, 0)
            propLabel.Text = "Draggable"
            propLabel.TextColor3 = colors.text
            propLabel.BackgroundTransparency = 1
            propLabel.Font = Enum.Font.Gotham
            propLabel.TextSize = 14
            propLabel.TextXAlignment = Enum.TextXAlignment.Left
            propLabel.Parent = propFrame
            
            local propInput = Instance.new("TextButton")
            propInput.Size = UDim2.new(0.6, -5, 1, 0)
            propInput.Position = UDim2.new(0.4, 0, 0, 0)
            propInput.Text = tostring(draggable)
            propInput.TextColor3 = colors.text
            propInput.BackgroundColor3 = draggable and colors.success or colors.propertyItem
            propInput.Font = Enum.Font.Gotham
            propInput.TextSize = 14
            propInput.Parent = propFrame
            
            local inputCorner = Instance.new("UICorner")
            inputCorner.CornerRadius = UDim.new(0, 6)
            inputCorner.Parent = propInput
            
            propInput.MouseButton1Click:Connect(function()
                local newValue = not draggable
                selectedElement:SetAttribute("Draggable", newValue)
                propInput.Text = tostring(newValue)
                propInput.BackgroundColor3 = newValue and colors.success or colors.propertyItem
                
                -- Enable/disable dragging
                if newValue then
                    setupDraggableFrame(selectedElement)
                end
            end)
            
            yPos = yPos + 35
        end
    end
end

-- Create property editor control
function createPropertyEditor(propName, propValue, yPos)
    local propFrame = Instance.new("Frame")
    propFrame.Size = UDim2.new(1, 0, 0, 30)
    propFrame.Position = UDim2.new(0, 0, 0, yPos)
    propFrame.BackgroundTransparency = 1
    propFrame.Parent = propertiesScroll
    
    local propLabel = Instance.new("TextLabel")
    propLabel.Size = UDim2.new(0.4, -5, 1, 0)
    propLabel.Position = UDim2.new(0, 0, 0, 0)
    propLabel.Text = propName
    propLabel.TextColor3 = colors.text
    propLabel.BackgroundTransparency = 1
    propLabel.Font = Enum.Font.Gotham
    propLabel.TextSize = 14
    propLabel.TextXAlignment = Enum.TextXAlignment.Left
    propLabel.Parent = propFrame
    
    local propInput = nil
    
    -- Create appropriate input based on property type
    if typeof(propValue) == "number" then
        propInput = Instance.new("TextBox")
        propInput.Size = UDim2.new(0.6, -5, 1, 0)
        propInput.Position = UDim2.new(0.4, 0, 0, 0)
        propInput.Text = tostring(propValue)
        propInput.TextColor3 = colors.text
        propInput.BackgroundColor3 = colors.propertyItem
        propInput.Font = Enum.Font.Gotham
        propInput.TextSize = 14
        
        propInput.FocusLost:Connect(function()
            local success, value = pcall(function()
                return tonumber(propInput.Text)
            end)
            
            if success and value then
                selectedElement[propName] = value
            else
                propInput.Text = tostring(selectedElement[propName])
            end
        end)
    elseif typeof(propValue) == "boolean" then
        propInput = Instance.new("TextButton")
        propInput.Size = UDim2.new(0.6, -5, 1, 0)
        propInput.Position = UDim2.new(0.4, 0, 0, 0)
        propInput.Text = tostring(propValue)
        propInput.TextColor3 = colors.text
        propInput.BackgroundColor3 = propValue and colors.success or colors.propertyItem
        propInput.Font = Enum.Font.Gotham
        propInput.TextSize = 14
        
        propInput.MouseButton1Click:Connect(function()
            local newValue = not selectedElement[propName]
            selectedElement[propName] = newValue
            propInput.Text = tostring(newValue)
            propInput.BackgroundColor3 = newValue and colors.success or colors.propertyItem
        end)
    elseif typeof(propValue) == "string" then
        propInput = Instance.new("TextBox")
        propInput.Size = UDim2.new(0.6, -5, 1, 0)
        propInput.Position = UDim2.new(0.4, 0, 0, 0)
        propInput.Text = propValue
        propInput.TextColor3 = colors.text
        propInput.BackgroundColor3 = colors.propertyItem
        propInput.Font = Enum.Font.Gotham
        propInput.TextSize = 14
        
        propInput.FocusLost:Connect(function()
            selectedElement[propName] = propInput.Text
        end)
    elseif typeof(propValue) == "Color3" then
        propInput = Instance.new("TextButton")
        propInput.Size = UDim2.new(0.6, -5, 1, 0)
        propInput.Position = UDim2.new(0.4, 0, 0, 0)
        propInput.Text = ""
        propInput.BackgroundColor3 = propValue
        
        propInput.MouseButton1Click:Connect(function()
            -- Create color picker popup
            local colorPicker = createGlassFrame(designerGui, UDim2.new(0, 200, 0, 250), UDim2.new(0.5, -100, 0.5, -125), 0)
            colorPicker.ZIndex = 100
            
            -- Add color picker UI here (simplified for this example)
            local closeBtn = Instance.new("TextButton")
            closeBtn.Size = UDim2.new(0, 30, 0, 30)
            closeBtn.Position = UDim2.new(1, -35, 0, 5)
            closeBtn.Text = "✕"
            closeBtn.TextColor3 = colors.text
            closeBtn.BackgroundColor3 = colors.accent
            closeBtn.Font = Enum.Font.GothamBold
            closeBtn.TextSize = 14
            closeBtn.Parent = colorPicker
            
            closeBtn.MouseButton1Click:Connect(function()
                colorPicker:Destroy()
            end)
            
            -- Actual color picker implementation would go here
        end)
    elseif typeof(propValue) == "UDim2" then
        local xInput = Instance.new("TextBox")
        xInput.Size = UDim2.new(0.3, -5, 1, 0)
        xInput.Position = UDim2.new(0.4, 0, 0, 0)
        xInput.Text = string.format("X: %.1f, %d", propValue.X.Scale, propValue.X.Offset)
        xInput.TextColor3 = colors.text
        xInput.BackgroundColor3 = colors.propertyItem
        xInput.Font = Enum.Font.Gotham
        xInput.TextSize = 12
        xInput.Parent = propFrame
        
        local yInput = Instance.new("TextBox")
        yInput.Size = UDim2.new(0.3, -5, 1, 0)
        yInput.Position = UDim2.new(0.7, 0, 0, 0)
        yInput.Text = string.format("Y: %.1f, %d", propValue.Y.Scale, propValue.Y.Offset)
        yInput.TextColor3 = colors.text
        yInput.BackgroundColor3 = colors.propertyItem
        yInput.Font = Enum.Font.Gotham
        yInput.TextSize = 12
        yInput.Parent = propFrame
        
        -- Add change handlers
    else
        propInput = Instance.new("TextLabel")
        propInput.Size = UDim2.new(0.6, -5, 1, 0)
        propInput.Position = UDim2.new(0.4, 0, 0, 0)
        propInput.Text = tostring(propValue)
        propInput.TextColor3 = Color3.fromRGB(180, 180, 180)
        propInput.BackgroundTransparency = 1
        propInput.Font = Enum.Font.Gotham
        propInput.TextSize = 14
        propInput.TextXAlignment = Enum.TextXAlignment.Left
    end
    
    if propInput then
        propInput.Parent = propFrame
        local inputCorner = Instance.new("UICorner")
        inputCorner.CornerRadius = UDim.new(0, 6)
        inputCorner.Parent = propInput
    end
    
    return yPos + 35
end

-- Function to make frames draggable
function setupDraggableFrame(frame)
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Toolbar
local toolbar = Instance.new("Frame")
toolbar.Size = UDim2.new(1, 0, 0, 40)
toolbar.Position = UDim2.new(0, 0, 0, 0)
toolbar.BackgroundTransparency = 1
toolbar.Parent = workspacePanel

local function createToolButton(text, icon, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 30)
    button.Position = position
    button.Text = icon .. " " .. text
    button.TextColor3 = colors.text
    button.BackgroundColor3 = colors.secondary
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.Parent = toolbar
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    addHoverEffect(button, Color3.fromRGB(60, 65, 80), colors.secondary)
    
    return button
end

-- Create toolbar buttons
local frameButton = createToolButton("Frame", "⬜", UDim2.new(0, 10, 0, 5))
local textButton = createToolButton("TextButton", "🔘", UDim2.new(0, 140, 0, 5))
local labelButton = createToolButton("TextLabel", "📝", UDim2.new(0, 270, 0, 5))
local imageButton = createToolButton("ImageLabel", "🖼️", UDim2.new(0, 400, 0, 5))
local scriptButton = createToolButton("LocalScript", "💻", UDim2.new(0, 530, 0, 5))

-- Create UI elements
frameButton.MouseButton1Click:Connect(function()
    createUIElement("Frame")
end)

textButton.MouseButton1Click:Connect(function()
    createUIElement("TextButton")
end)

labelButton.MouseButton1Click:Connect(function()
    createUIElement("TextLabel")
end)

imageButton.MouseButton1Click:Connect(function()
    createUIElement("ImageLabel")
end)

scriptButton.MouseButton1Click:Connect(function()
    createUIElement("LocalScript")
end)

-- Function to create UI elements
function createUIElement(elementType)
    local newElement = Instance.new(elementType)
    newElement.Name = "New" .. elementType
    
    -- Set default properties based on element type
    if elementType == "Frame" then
        newElement.Size = UDim2.new(0, 200, 0, 200)
        newElement.Position = UDim2.new(0.5, -100, 0.5, -100)
        newElement.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
        newElement.BorderSizePixel = 0
        
        -- Add default styling
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(100, 100, 120)
        stroke.Thickness = 2
        stroke.Parent = newElement
    elseif elementType == "TextLabel" then
        newElement.Size = UDim2.new(0, 200, 0, 60)
        newElement.Position = UDim2.new(0.5, -100, 0.5, -30)
        newElement.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
        newElement.Text = "Text Label"
        newElement.TextColor3 = Color3.fromRGB(255, 255, 255)
        newElement.TextSize = 16
        newElement.Font = Enum.Font.Gotham
        newElement.BorderSizePixel = 0
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
    elseif elementType == "TextButton" then
        newElement.Size = UDim2.new(0, 200, 0, 60)
        newElement.Position = UDim2.new(0.5, -100, 0.5, -30)
        newElement.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
        newElement.Text = "Click Me"
        newElement.TextColor3 = Color3.fromRGB(255, 255, 255)
        newElement.TextSize = 16
        newElement.Font = Enum.Font.Gotham
        newElement.BorderSizePixel = 0
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
        
        -- Add a sample script
        local script = Instance.new("LocalScript")
        script.Name = "ButtonScript"
        script.Source = [[
            local button = script.Parent
            
            button.MouseButton1Click:Connect(function()
                print("Button clicked!")
                button.Text = "Clicked!"
            end)
        ]]
        script.Parent = newElement
    elseif elementType == "ImageLabel" then
        newElement.Size = UDim2.new(0, 200, 0, 200)
        newElement.Position = UDim2.new(0.5, -100, 0.5, -100)
        newElement.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        newElement.BorderSizePixel = 0
        newElement.Image = "rbxassetid://111490672" -- Default placeholder image
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
    elseif elementType == "LocalScript" then
        newElement.Source = "-- New script\nprint(\"Hello world!\")"
        newElement.Name = "NewScript"
    else
        newElement.Size = UDim2.new(0, 100, 0, 100)
        newElement.Position = UDim2.new(0.5, -50, 0.5, -50)
        newElement.BackgroundTransparency = 1
    end
    
    -- If we have a selected element, parent to it
    if selectedElement and selectedElement:IsA("GuiObject") then
        newElement.Parent = selectedElement
    else
        newElement.Parent = uiCanvas
    end
    
    -- Select the new element
    selectElement(newElement)
    
    -- Refresh explorer
    refreshExplorer()
end

-- Function to select an element
function selectElement(element)
    -- Remove selection from previous element
    if selectedElement then
        if selectedElement:FindFirstChild("SelectionBox") then
            selectedElement.SelectionBox:Destroy()
        end
    end
    
    selectedElement = element
    
    if not element then
        return
    end
    
    -- Add selection indicator
    local selectionBox = Instance.new("SelectionBox")
    selectionBox.Name = "SelectionBox"
    selectionBox.Adornee = element
    selectionBox.Color3 = colors.primary
    selectionBox.LineThickness = 0.1
    selectionBox.Parent = element
    
    -- Refresh properties
    refreshProperties()
end

-- Notification system
function showNotification(message)
    local notification = Instance.new("TextLabel")
    notification.Text = message
    notification.Size = UDim2.new(0.7, 0, 0, 40)
    notification.Position = UDim2.new(0.15, 0, 0.1, 0)
    notification.BackgroundColor3 = colors.primary
    notification.TextColor3 = colors.text
    notification.Font = Enum.Font.GothamBold
    notification.TextSize = 14
    notification.Parent = designerGui
    
    local notifCorner = Instance.new("UICorner")
    notifCorner.CornerRadius = UDim.new(0, 8)
    notifCorner.Parent = notification
    
    delay(3, function()
        if notification then
            TweenService:Create(notification, TweenInfo.new(0.3), {Position = UDim2.new(0.15, 0, -0.1, 0)}):Play()
            delay(0.3, function()
                notification:Destroy()
            end)
        end
    end)
end

-- Dragging functionality for main window
local dragging = false
local dragStart = nil
local startPos = nil

local function onMainDragStart(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainContainer.Position
    end
end

local function onMainDrag(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        mainContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

local function onMainDragEnd(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end

titleBar.InputBegan:Connect(onMainDragStart)
UserInputService.InputChanged:Connect(onMainDrag)
UserInputService.InputEnded:Connect(onMainDragEnd)

-- Minimize functionality
local isMinimized = false
local originalSize = mainContainer.Size

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        originalSize = mainContainer.Size
        local tween = TweenService:Create(mainContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 1000, 0, 40)})
        tween:Play()
        minimizeButton.Text = "+"
    else
        local tween = TweenService:Create(mainContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Size = originalSize})
        tween:Play()
        minimizeButton.Text = "─"
    end
end)

closeButton.MouseButton1Click:Connect(function()
    local tween = TweenService:Create(mainContainer, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 0)})
    tween:Play()
    tween.Completed:Wait()
    designerGui:Destroy()
end)

-- Keyboard shortcuts
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Delete and selectedElement then
        selectedElement:Destroy()
        selectedElement = nil
        refreshExplorer()
    elseif input.KeyCode == Enum.KeyCode.F1 then
        mainContainer.Visible = not mainContainer.Visible
    elseif input.KeyCode == Enum.KeyCode.Escape then
        selectElement(nil)
    end
end)

-- Initial notification
showNotification("🎨 UI DESIGNER PRO LOADED! PRESS F1 TO TOGGLE")

-- Initial refresh
refreshExplorer()

-- Create sample UI
local sampleFrame = Instance.new("Frame")
sampleFrame.Name = "SampleFrame"
sampleFrame.Size = UDim2.new(0, 300, 0, 200)
sampleFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
sampleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
sampleFrame.Parent = uiCanvas

local sampleCorner = Instance.new("UICorner")
sampleCorner.CornerRadius = UDim.new(0, 8)
sampleCorner.Parent = sampleFrame

local sampleLabel = Instance.new("TextLabel")
sampleLabel.Name = "SampleLabel"
sampleLabel.Size = UDim2.new(0.8, 0, 0.3, 0)
sampleLabel.Position = UDim2.new(0.1, 0, 0.1, 0)
sampleLabel.Text = "UI Designer Pro"
sampleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
sampleLabel.BackgroundTransparency = 1
sampleLabel.Font = Enum.Font.GothamBold
sampleLabel.TextSize = 20
sampleLabel.Parent = sampleFrame

local sampleButton = Instance.new("TextButton")
sampleButton.Name = "SampleButton"
sampleButton.Size = UDim2.new(0.6, 0, 0.3, 0)
sampleButton.Position = UDim2.new(0.2, 0, 0.5, 0)
sampleButton.Text = "Click Me"
sampleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
sampleButton.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
sampleButton.Font = Enum.Font.Gotham
sampleButton.TextSize = 16
sampleButton.Parent = sampleFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 8)
buttonCorner.Parent = sampleButton

-- Add a sample script
local sampleScript = Instance.new("LocalScript")
sampleScript.Name = "SampleScript"
sampleScript.Source = [[
    local button = script.Parent
    
    button.MouseButton1Click:Connect(function()
        print("Button clicked!")
        button.Text = "Clicked!"
    end)
]]
sampleScript.Parent = sampleButton

-- Select the sample frame
selectElement(sampleFrame)
