-- Roblox UI Designer with Advanced Editing Features
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Modern color palette
local colors = {
    background = Color3.fromRGB(28, 30, 38),
    primary = Color3.fromRGB(65, 140, 220),
    secondary = Color3.fromRGB(80, 90, 110),
    accent = Color3.fromRGB(240, 90, 90),
    text = Color3.fromRGB(240, 240, 240),
    darkText = Color3.fromRGB(30, 30, 30),
    success = Color3.fromRGB(80, 200, 120),
    warning = Color3.fromRGB(220, 180, 60),
    error = Color3.fromRGB(220, 80, 80)
}

-- Main UI Designer GUI
local designerGui = Instance.new("ScreenGui")
designerGui.Name = "UIDesignerPro"
designerGui.ResetOnSpawn = false
designerGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
designerGui.Parent = game:GetService("CoreGui")

-- Main Container with Glass Morphism Effect
local mainContainer = Instance.new("Frame")
mainContainer.Name = "MainContainer"
mainContainer.Size = UDim2.new(0, 450, 0, 600)
mainContainer.Position = UDim2.new(0.5, -225, 0.5, -300)
mainContainer.BackgroundColor3 = colors.background
mainContainer.BackgroundTransparency = 0.1
mainContainer.BorderSizePixel = 0
mainContainer.Parent = designerGui

-- Corner radius
local containerCorner = Instance.new("UICorner")
containerCorner.CornerRadius = UDim.new(0, 14)
containerCorner.Parent = mainContainer

-- Stroke
local containerStroke = Instance.new("UIStroke")
containerStroke.Color = Color3.fromRGB(80, 90, 110)
containerStroke.Thickness = 1
containerStroke.Transparency = 0.7
containerStroke.Parent = mainContainer

-- Drop Shadow
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 24, 1, 24)
shadow.Position = UDim2.new(0, -12, 0, -12)
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.8
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.ZIndex = -1
shadow.Parent = mainContainer

-- Title Bar with Gradient
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 42)
titleBar.BackgroundColor3 = colors.primary
titleBar.BorderSizePixel = 0
titleBar.Parent = mainContainer

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 14)
titleCorner.Parent = titleBar

-- Fix top corners
local cornerFix = Instance.new("Frame")
cornerFix.Size = UDim2.new(1, 0, 0, 14)
cornerFix.Position = UDim2.new(0, 0, 1, -14)
cornerFix.BackgroundColor3 = colors.primary
cornerFix.BorderSizePixel = 0
cornerFix.Parent = titleBar

-- Title Text with Icon
local titleText = Instance.new("TextLabel")
titleText.Name = "TitleText"
titleText.Size = UDim2.new(1, -100, 1, 0)
titleText.Position = UDim2.new(0, 15, 0, 0)
titleText.Text = "üé® UI Designer Pro"
titleText.TextColor3 = colors.text
titleText.BackgroundTransparency = 1
titleText.Font = Enum.Font.GothamBold
titleText.TextSize = 16
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Parent = titleBar

-- Control Buttons
local controlButtons = Instance.new("Frame")
controlButtons.Name = "ControlButtons"
controlButtons.Size = UDim2.new(0, 80, 0, 30)
controlButtons.Position = UDim2.new(1, -90, 0, 6)
controlButtons.BackgroundTransparency = 1
controlButtons.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(0, 0, 0, 0)
minimizeButton.Text = "‚îÄ"
minimizeButton.TextColor3 = colors.text
minimizeButton.BackgroundColor3 = colors.secondary
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 16
minimizeButton.Parent = controlButtons

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 6)
minimizeCorner.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(0, 40, 0, 0)
closeButton.Text = "‚úï"
closeButton.TextColor3 = colors.text
closeButton.BackgroundColor3 = colors.accent
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14
closeButton.Parent = controlButtons

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 6)
closeCorner.Parent = closeButton

-- Button hover effects
local function addHoverEffect(button, hoverColor, normalColor)
    button.MouseEnter:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor})
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = normalColor})
        tween:Play()
    end)
end

addHoverEffect(closeButton, Color3.fromRGB(250, 100, 100), colors.accent)
addHoverEffect(minimizeButton, Color3.fromRGB(100, 110, 130), colors.secondary)

-- Tab Bar
local tabBar = Instance.new("Frame")
tabBar.Name = "TabBar"
tabBar.Size = UDim2.new(1, 0, 0, 40)
tabBar.Position = UDim2.new(0, 0, 0, 42)
tabBar.BackgroundColor3 = colors.background
tabBar.BackgroundTransparency = 0.3
tabBar.BorderSizePixel = 0
tabBar.Parent = mainContainer

local tabIndicator = Instance.new("Frame")
tabIndicator.Name = "TabIndicator"
tabIndicator.Size = UDim2.new(0.33, 0, 0, 3)
tabIndicator.Position = UDim2.new(0, 0, 1, -3)
tabIndicator.BackgroundColor3 = colors.primary
tabIndicator.BorderSizePixel = 0
tabIndicator.Parent = tabBar

-- Tabs
local tabs = {
    {name = "Create", icon = "üõ†Ô∏è"},
    {name = "Properties", icon = "üìù"},
    {name = "Scripts", icon = "üíª"}
}

local tabButtons = {}
for i, tab in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tab.name .. "Tab"
    tabButton.Size = UDim2.new(0.33, 0, 1, 0)
    tabButton.Position = UDim2.new((i-1) * 0.33, 0, 0, 0)
    tabButton.Text = tab.icon .. " " .. tab.name
    tabButton.TextColor3 = i == 1 and colors.primary or Color3.fromRGB(180, 180, 180)
    tabButton.BackgroundTransparency = 1
    tabButton.Font = Enum.Font.GothamMedium
    tabButton.TextSize = 13
    tabButton.Parent = tabBar
    
    tabButtons[tab.name] = tabButton
end

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -20, 1, -102)
contentFrame.Position = UDim2.new(0, 10, 0, 92)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainContainer

-- Tab Contents
local tabContents = {}
for i, tab in ipairs(tabs) do
    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Name = tab.name .. "Content"
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.BackgroundTransparency = 1
    tabContent.ScrollBarThickness = 6
    tabContent.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
    tabContent.BorderSizePixel = 0
    tabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabContent.Visible = i == 1
    tabContent.Parent = contentFrame
    
    tabContents[tab.name] = tabContent
end

-- Dragging functionality for main window
local dragging = false
local dragStart = nil
local startPos = nil

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainContainer.Position
        
        -- Animate button press
        local tween = TweenService:Create(mainContainer, TweenInfo.new(0.1), {Size = UDim2.new(0, 445, 0, 595)})
        tween:Play()
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
        
        -- Animate button release
        local tween = TweenService:Create(mainContainer, TweenInfo.new(0.1), {Size = UDim2.new(0, 450, 0, 600)})
        tween:Play()
    end
end)

-- Minimize functionality
local isMinimized = false
local originalSize = mainContainer.Size

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        originalSize = mainContainer.Size
        local tween = TweenService:Create(mainContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Size = UDim2.new(0, 450, 0, 42)})
        tween:Play()
        minimizeButton.Text = "+"
    else
        local tween = TweenService:Create(mainContainer, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {Size = originalSize})
        tween:Play()
        minimizeButton.Text = "‚îÄ"
    end
end)

closeButton.MouseButton1Click:Connect(function()
    local tween = TweenService:Create(mainContainer, TweenInfo.new(0.2), {Size = UDim2.new(0, 0, 0, 0)})
    tween:Play()
    tween.Completed:Wait()
    designerGui:Destroy()
end)

-- Tab switching function
local currentTab = "Create"

local function switchTab(tabName)
    currentTab = tabName
    
    -- Update tab buttons
    for name, button in pairs(tabButtons) do
        button.TextColor3 = name == tabName and colors.primary or Color3.fromRGB(180, 180, 180)
    end
    
    -- Get tab index (fixed calculation)
    local tabIndex = 0
    for i, tab in ipairs(tabs) do
        if tab.name == tabName then
            tabIndex = i - 1
            break
        end
    end
    
    -- Update tab indicator position
    local indicatorTween = TweenService:Create(tabIndicator, TweenInfo.new(0.2), {
        Position = UDim2.new(tabIndex * 0.33, 0, 1, -3)
    })
    indicatorTween:Play()
    
    -- Update tab visibility
    for name, content in pairs(tabContents) do
        content.Visible = name == tabName
    end
end

-- Connect tab buttons
for name, button in pairs(tabButtons) do
    button.MouseButton1Click:Connect(function()
        switchTab(name)
    end)
end

-- Create UI Elements
local createElements = {
    Frame = {
        Name = "Frame",
        Icon = "‚¨ú",
        Description = "Basic container frame"
    },
    TextLabel = {
        Name = "TextLabel",
        Icon = "üìù",
        Description = "Display text to users"
    },
    TextButton = {
        Name = "TextButton",
        Icon = "üîò",
        Description = "Interactive button element"
    },
    TextBox = {
        Name = "TextBox",
        Icon = "‚úèÔ∏è",
        Description = "Text input field"
    },
    ImageLabel = {
        Name = "ImageLabel",
        Icon = "üñºÔ∏è",
        Description = "Display images"
    },
    ScrollingFrame = {
        Name = "ScrollingFrame",
        Icon = "üìú",
        Description = "Scrollable container"
    }
}

-- Populate Create Tab
local createContent = tabContents["Create"]
local yPos = 10

for elementType, properties in pairs(createElements) do
    local button = Instance.new("TextButton")
    button.Name = elementType .. "Button"
    button.Size = UDim2.new(1, -20, 0, 70)
    button.Position = UDim2.new(0, 10, 0, yPos)
    button.Text = ""
    button.TextColor3 = colors.text
    button.BackgroundColor3 = Color3.fromRGB(40, 45, 55)
    button.BorderSizePixel = 0
    button.Font = Enum.Font.Gotham
    button.TextSize = 12
    button.Parent = createContent
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    local buttonStroke = Instance.new("UIStroke")
    buttonStroke.Color = Color3.fromRGB(60, 70, 80)
    buttonStroke.Thickness = 1
    buttonStroke.Parent = button
    
    -- Icon
    local icon = Instance.new("TextLabel")
    icon.Size = UDim2.new(0, 40, 0, 40)
    icon.Position = UDim2.new(0, 10, 0, 15)
    icon.Text = properties.Icon
    icon.TextColor3 = colors.primary
    icon.BackgroundTransparency = 1
    icon.Font = Enum.Font.GothamBold
    icon.TextSize = 24
    icon.Parent = button
    
    -- Title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -60, 0, 25)
    title.Position = UDim2.new(0, 55, 0, 10)
    title.Text = "Create " .. elementType
    title.TextColor3 = colors.text
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.TextSize = 14
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = button
    
    -- Description
    local desc = Instance.new("TextLabel")
    desc.Size = UDim2.new(1, -60, 0, 25)
    desc.Position = UDim2.new(0, 55, 0, 30)
    desc.Text = properties.Description
    desc.TextColor3 = Color3.fromRGB(180, 180, 180)
    desc.BackgroundTransparency = 1
    desc.Font = Enum.Font.Gotham
    desc.TextSize = 11
    desc.TextXAlignment = Enum.TextXAlignment.Left
    desc.Parent = button
    
    -- Hover effect
    addHoverEffect(button, Color3.fromRGB(50, 55, 65), Color3.fromRGB(40, 45, 55))
    
    button.MouseButton1Click:Connect(function()
        createUIElement(elementType)
    end)
    
    yPos = yPos + 80
end

createContent.CanvasSize = UDim2.new(0, 0, 0, yPos + 10)

-- UI Canvas for created elements
local uiCanvas = Instance.new("ScreenGui")
uiCanvas.Name = "UICanvas"
uiCanvas.ResetOnSpawn = false
uiCanvas.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
uiCanvas.Parent = playerGui

-- Currently selected element
local selectedElement = nil
local dragHandleSize = 10

-- Function to create UI elements
function createUIElement(elementType)
    local newElement = Instance.new(elementType)
    newElement.Name = "New" .. elementType
    newElement.Parent = uiCanvas
    
    -- Set default properties based on element type
    if elementType == "Frame" then
        newElement.Size = UDim2.new(0, 200, 0, 200)
        newElement.Position = UDim2.new(0.5, -100, 0.5, -100)
        newElement.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
        newElement.BorderSizePixel = 0
        
        -- Add default styling
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(100, 100, 120)
        stroke.Thickness = 2
        stroke.Parent = newElement
    elseif elementType == "TextLabel" then
        newElement.Size = UDim2.new(0, 150, 0, 50)
        newElement.Position = UDim2.new(0.5, -75, 0.5, -25)
        newElement.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
        newElement.Text = "Text Label"
        newElement.TextColor3 = Color3.fromRGB(255, 255, 255)
        newElement.TextSize = 14
        newElement.Font = Enum.Font.Gotham
        newElement.BorderSizePixel = 0
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
    elseif elementType == "TextButton" then
        newElement.Size = UDim2.new(0, 150, 0, 50)
        newElement.Position = UDim2.new(0.5, -75, 0.5, -25)
        newElement.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
        newElement.Text = "Click Me"
        newElement.TextColor3 = Color3.fromRGB(255, 255, 255)
        newElement.TextSize = 14
        newElement.Font = Enum.Font.Gotham
        newElement.BorderSizePixel = 0
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
    elseif elementType == "ImageLabel" then
        newElement.Size = UDim2.new(0, 150, 0, 150)
        newElement.Position = UDim2.new(0.5, -75, 0.5, -75)
        newElement.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        newElement.BorderSizePixel = 0
        newElement.Image = "rbxassetid://111490672" -- Default placeholder image
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
    else
        newElement.Size = UDim2.new(0, 150, 0, 150)
        newElement.Position = UDim2.new(0.5, -75, 0.5, -75)
        newElement.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        newElement.BorderSizePixel = 0
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = newElement
    end
    
    -- Make element draggable and resizable
    setupElementControls(newElement)
    
    -- Select the new element
    selectElement(newElement)
    
    -- Switch to properties tab
    switchTab("Properties")
end

-- Function to set up dragging and resizing for elements
function setupElementControls(element)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    local resizing = false
    local resizeStart = nil
    local startSize = nil
    local resizeHandle = nil -- Fixed variable to track which handle is being used
    
    -- Create drag handles
    local dragHandles = {}
    
    -- Top-left handle
    local topLeft = createDragHandle("TopLeft", UDim2.new(0, -dragHandleSize/2, 0, -dragHandleSize/2))
    topLeft.Parent = element
    
    -- Top-right handle
    local topRight = createDragHandle("TopRight", UDim2.new(1, -dragHandleSize/2, 0, -dragHandleSize/2))
    topRight.Parent = element
    
    -- Bottom-left handle
    local bottomLeft = createDragHandle("BottomLeft", UDim2.new(0, -dragHandleSize/2, 1, -dragHandleSize/2))
    bottomLeft.Parent = element
    
    -- Bottom-right handle
    local bottomRight = createDragHandle("BottomRight", UDim2.new(1, -dragHandleSize/2, 1, -dragHandleSize/2))
    bottomRight.Parent = element
    
    -- Function to update handle positions
    local function updateHandles()
        topLeft.Position = UDim2.new(0, -dragHandleSize/2, 0, -dragHandleSize/2)
        topRight.Position = UDim2.new(1, -dragHandleSize/2, 0, -dragHandleSize/2)
        bottomLeft.Position = UDim2.new(0, -dragHandleSize/2, 1, -dragHandleSize/2)
        bottomRight.Position = UDim2.new(1, -dragHandleSize/2, 1, -dragHandleSize/2)
    end
    
    updateHandles()
    
    -- Dragging functionality
    element.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = element.Position
            selectElement(element)
        end
    end)
    
    -- Resizing functionality
    local function handleResize(handle, input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            resizing = true
            resizeHandle = handle -- Fixed: Track which handle is being used
            resizeStart = input.Position
            startSize = element.Size
            startPos = element.Position
            selectElement(element)
        end
    end
    
    topLeft.InputBegan:Connect(function(input) handleResize("TopLeft", input) end)
    topRight.InputBegan:Connect(function(input) handleResize("TopRight", input) end)
    bottomLeft.InputBegan:Connect(function(input) handleResize("BottomLeft", input) end)
    bottomRight.InputBegan:Connect(function(input) handleResize("BottomRight", input) end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            element.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
        
        if resizing and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - resizeStart
            local newSize = startSize
            
            if resizeHandle == "TopLeft" then
                newSize = UDim2.new(
                    newSize.X.Scale, newSize.X.Offset - delta.X,
                    newSize.Y.Scale, newSize.Y.Offset - delta.Y
                )
                element.Position = UDim2.new(
                    startPos.X.Scale, startPos.X.Offset + delta.X,
                    startPos.Y.Scale, startPos.Y.Offset + delta.Y
                )
            elseif resizeHandle == "TopRight" then
                newSize = UDim2.new(
                    newSize.X.Scale, newSize.X.Offset + delta.X,
                    newSize.Y.Scale, newSize.Y.Offset - delta.Y
                )
                element.Position = UDim2.new(
                    startPos.X.Scale, startPos.X.Offset,
                    startPos.Y.Scale, startPos.Y.Offset + delta.Y
                )
            elseif resizeHandle == "BottomLeft" then
                newSize = UDim2.new(
                    newSize.X.Scale, newSize.X.Offset - delta.X,
                    newSize.Y.Scale, newSize.Y.Offset + delta.Y
                )
                element.Position = UDim2.new(
                    startPos.X.Scale, startPos.X.Offset + delta.X,
                    startPos.Y.Scale, startPos.Y.Offset
                )
            elseif resizeHandle == "BottomRight" then
                newSize = UDim2.new(
                    newSize.X.Scale, newSize.X.Offset + delta.X,
                    newSize.Y.Scale, newSize.Y.Offset + delta.Y
                )
            end
            
            -- Apply minimum size
            element.Size = UDim2.new(
                newSize.X.Scale, math.max(newSize.X.Offset, 20),
                newSize.Y.Scale, math.max(newSize.Y.Offset, 20)
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            resizing = false
        end
    end)
    
    -- Update handles when element changes size
    element:GetPropertyChangedSignal("Size"):Connect(updateHandles)
end

-- Create a drag handle
function createDragHandle(name, position)
    local handle = Instance.new("Frame")
    handle.Name = name
    handle.Size = UDim2.new(0, dragHandleSize, 0, dragHandleSize)
    handle.Position = position
    handle.BackgroundColor3 = colors.primary
    handle.BorderSizePixel = 0
    handle.ZIndex = 10  -- Ensure handles are always on top
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = handle
    
    return handle
end

-- Function to select an element
function selectElement(element)
    -- Remove selection from previous element
    if selectedElement then
        if selectedElement:FindFirstChild("SelectionBox") then
            selectedElement.SelectionBox:Destroy()
        end
    end
    
    selectedElement = element
    
    -- Add selection indicator
    local selectionBox = Instance.new("SelectionBox")
    selectionBox.Name = "SelectionBox"
    selectionBox.Adornee = element
    selectionBox.Color3 = colors.primary
    selectionBox.LineThickness = 0.05
    selectionBox.Parent = element
    
    -- Update properties tab
    updatePropertiesTab()
end

-- Update Properties Tab
function updatePropertiesTab()
    local propertiesContent = tabContents["Properties"]
    propertiesContent:ClearAllChildren()
    
    if not selectedElement then
        local noSelection = Instance.new("TextLabel")
        noSelection.Size = UDim2.new(1, -20, 0, 50)
        noSelection.Position = UDim2.new(0, 10, 0, 10)
        noSelection.Text = "‚ùå No element selected"
        noSelection.TextColor3 = colors.error
        noSelection.BackgroundTransparency = 1
        noSelection.Font = Enum.Font.GothamBold
        noSelection.TextSize = 14
        noSelection.TextXAlignment = Enum.TextXAlignment.Center
        noSelection.Parent = propertiesContent
        return
    end
    
    local yPos = 10
    
    -- Element Info
    local infoLabel = Instance.new("TextLabel")
    infoLabel.Size = UDim2.new(1, -20, 0, 30)
    infoLabel.Position = UDim2.new(0, 10, 0, yPos)
    infoLabel.Text = "üìù Editing: " .. selectedElement.Name
    infoLabel.TextColor3 = colors.text
    infoLabel.BackgroundTransparency = 1
    infoLabel.Font = Enum.Font.GothamBold
    infoLabel.TextSize = 16
    infoLabel.TextXAlignment = Enum.TextXAlignment.Left
    infoLabel.Parent = propertiesContent
    
    yPos = yPos + 40
    
    -- Property: Name
    createPropertyInput(propertiesContent, "Name", selectedElement.Name, yPos, function(value)
        selectedElement.Name = value
        infoLabel.Text = "üìù Editing: " .. selectedElement.Name
    end)
    yPos = yPos + 40
    
    -- Property: Position
    createVector2Input(propertiesContent, "Position", 
        selectedElement.Position.X.Offset, selectedElement.Position.Y.Offset, 
        yPos, function(x, y)
            selectedElement.Position = UDim2.new(0, x, 0, y)
    end)
    yPos = yPos + 60
    
    -- Property: Size
    createVector2Input(propertiesContent, "Size", 
        selectedElement.Size.X.Offset, selectedElement.Size.Y.Offset, 
        yPos, function(w, h)
            selectedElement.Size = UDim2.new(0, w, 0, h)
    end)
    yPos = yPos + 60
    
    -- Background Color
    createColorPicker(propertiesContent, "Background Color", 
        selectedElement.BackgroundColor3, yPos, function(color)
            selectedElement.BackgroundColor3 = color
    end)
    yPos = yPos + 100
    
    -- Transparency
    createSlider(propertiesContent, "Transparency", 
        selectedElement.BackgroundTransparency, 0, 1, yPos, function(value)
            selectedElement.BackgroundTransparency = value
    end)
    yPos = yPos + 60
    
    -- Border Size
    createSlider(propertiesContent, "Border Size", 
        selectedElement.BorderSizePixel, 0, 10, yPos, function(value)
            selectedElement.BorderSizePixel = value
    end)
    yPos = yPos + 60
    
    -- Reset on Spawn
    createToggle(propertiesContent, "Reset on Spawn", 
        selectedElement.ResetOnSpawn, yPos, function(value)
            selectedElement.ResetOnSpawn = value
    end)
    yPos = yPos + 50
    
    -- For text elements
    if selectedElement:IsA("TextLabel") or selectedElement:IsA("TextButton") or selectedElement:IsA("TextBox") then
        createPropertyInput(propertiesContent, "Text", selectedElement.Text, yPos, function(value)
            selectedElement.Text = value
        end)
        yPos = yPos + 40
        
        createSlider(propertiesContent, "Text Size", 
            selectedElement.TextSize, 8, 50, yPos, function(value)
                selectedElement.TextSize = value
        end)
        yPos = yPos + 60
        
        createColorPicker(propertiesContent, "Text Color", 
            selectedElement.TextColor3, yPos, function(color)
                selectedElement.TextColor3 = color
        end)
        yPos = yPos + 100
    end
    
    -- For ImageLabel
    if selectedElement:IsA("ImageLabel") then
        createPropertyInput(propertiesContent, "Image ID", selectedElement.Image, yPos, function(value)
            selectedElement.Image = value
        end)
        yPos = yPos + 40
    end
    
    -- Add UI Effects section
    local effectsLabel = Instance.new("TextLabel")
    effectsLabel.Size = UDim2.new(1, -20, 0, 30)
    effectsLabel.Position = UDim2.new(0, 10, 0, yPos)
    effectsLabel.Text = "‚ú® UI Effects"
    effectsLabel.TextColor3 = colors.primary
    effectsLabel.BackgroundTransparency = 1
    effectsLabel.Font = Enum.Font.GothamBold
    effectsLabel.TextSize = 16
    effectsLabel.TextXAlignment = Enum.TextXAlignment.Left
    effectsLabel.Parent = propertiesContent
    yPos = yPos + 40
    
    -- Add Corner button
    local cornerBtn = createEffectButton("Add Corner", yPos, propertiesContent)
    cornerBtn.MouseButton1Click:Connect(function()
        if not selectedElement:FindFirstChildOfClass("UICorner") then
            local corner = Instance.new("UICorner")
            corner.Parent = selectedElement
        end
    end)
    yPos = yPos + 40
    
    -- Add Stroke button
    local strokeBtn = createEffectButton("Add Stroke", yPos, propertiesContent)
    strokeBtn.MouseButton1Click:Connect(function()
        if not selectedElement:FindFirstChildOfClass("UIStroke") then
            local stroke = Instance.new("UIStroke")
            stroke.Parent = selectedElement
        end
    end)
    yPos = yPos + 40
    
    -- Add Gradient button
    local gradientBtn = createEffectButton("Add Gradient", yPos, propertiesContent)
    gradientBtn.MouseButton1Click:Connect(function()
        if not selectedElement:FindFirstChildOfClass("UIGradient") then
            local gradient = Instance.new("UIGradient")
            gradient.Parent = selectedElement
        end
    end)
    yPos = yPos + 40
    
    propertiesContent.CanvasSize = UDim2.new(0, 0, 0, yPos + 20)
end

-- Create a property input field
function createPropertyInput(parent, name, value, yPos, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -20, 0, 30)
    frame.Position = UDim2.new(0, 10, 0, yPos)
    frame.BackgroundTransparency = 1
    frame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.4, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = name .. ":"
    label.TextColor3 = colors.text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local input = Instance.new("TextBox")
    input.Size = UDim2.new(0.6, 0, 1, 0)
    input.Position = UDim2.new(0.4, 0, 0, 0)
    input.Text = tostring(value)
    input.TextColor3 = colors.darkText
    input.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    input.BorderSizePixel = 0
    input.Font = Enum.Font.Gotham
    input.TextSize = 14
    input.Parent = frame
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 4)
    inputCorner.Parent = input
    
    input.FocusLost:Connect(function()
        callback(input.Text)
    end)
end

-- Create a Vector2 input (for position/size)
function createVector2Input(parent, name, x, y, yPos, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -20, 0, 50)
    frame.Position = UDim2.new(0, 10, 0, yPos)
    frame.BackgroundTransparency = 1
    frame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = name .. ":"
    label.TextColor3 = colors.text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    -- X input
    local xLabel = Instance.new("TextLabel")
    xLabel.Size = UDim2.new(0.1, 0, 0, 30)
    xLabel.Position = UDim2.new(0, 0, 0, 25)
    xLabel.Text = "X:"
    xLabel.TextColor3 = colors.text
    xLabel.BackgroundTransparency = 1
    xLabel.Font = Enum.Font.Gotham
    xLabel.TextSize = 14
    xLabel.Parent = frame
    
    local xInput = Instance.new("TextBox")
    xInput.Size = UDim2.new(0.35, 0, 0, 30)
    xInput.Position = UDim2.new(0.1, 0, 0, 25)
    xInput.Text = tostring(x)
    xInput.TextColor3 = colors.darkText
    xInput.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    xInput.BorderSizePixel = 0
    xInput.Font = Enum.Font.Gotham
    xInput.TextSize = 14
    xInput.Parent = frame
    
    local xCorner = Instance.new("UICorner")
    xCorner.CornerRadius = UDim.new(0, 4)
    xCorner.Parent = xInput
    
    -- Y input
    local yLabel = Instance.new("TextLabel")
    yLabel.Size = UDim2.new(0.1, 0, 0, 30)
    yLabel.Position = UDim2.new(0.5, 0, 0, 25)
    yLabel.Text = "Y:"
    yLabel.TextColor3 = colors.text
    yLabel.BackgroundTransparency = 1
    yLabel.Font = Enum.Font.Gotham
    yLabel.TextSize = 14
    yLabel.Parent = frame
    
    local yInput = Instance.new("TextBox")
    yInput.Size = UDim2.new(0.35, 0, 0, 30)
    yInput.Position = UDim2.new(0.6, 0, 0, 25)
    yInput.Text = tostring(y)
    yInput.TextColor3 = colors.darkText
    yInput.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    yInput.BorderSizePixel = 0
    yInput.Font = Enum.Font.Gotham
    yInput.TextSize = 14
    yInput.Parent = frame
    
    local yCorner = Instance.new("UICorner")
    yCorner.CornerRadius = UDim.new(0, 4)
    yCorner.Parent = yInput
    
    -- Update callback
    local function update()
        local xVal = tonumber(xInput.Text) or 0
        local yVal = tonumber(yInput.Text) or 0
        callback(xVal, yVal)
    end
    
    xInput.FocusLost:Connect(update)
    yInput.FocusLost:Connect(update)
end

-- Create a color picker
function createColorPicker(parent, name, currentColor, yPos, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -20, 0, 90)
    frame.Position = UDim2.new(0, 10, 0, yPos)
    frame.BackgroundTransparency = 1
    frame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = name
    label.TextColor3 = colors.text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    -- Color preview
    local preview = Instance.new("Frame")
    preview.Size = UDim2.new(0, 60, 0, 30)
    preview.Position = UDim2.new(0, 0, 0, 25)
    preview.BackgroundColor3 = currentColor
    preview.BorderSizePixel = 0
    preview.Parent = frame
    
    local previewCorner = Instance.new("UICorner")
    previewCorner.CornerRadius = UDim.new(0, 4)
    previewCorner.Parent = preview
    
    -- RGB inputs
    local rInput = createNumberInput("R:", math.floor(currentColor.R * 255), UDim2.new(0, 70, 0, 25), frame)
    local gInput = createNumberInput("G:", math.floor(currentColor.G * 255), UDim2.new(0, 70, 0, 60), frame)
    local bInput = createNumberInput("B:", math.floor(currentColor.B * 255), UDim2.new(0, 70, 0, 95), frame)
    
    -- Apply button
    local applyBtn = Instance.new("TextButton")
    applyBtn.Size = UDim2.new(0.3, 0, 0, 30)
    applyBtn.Position = UDim2.new(0.7, 0, 0, 30)
    applyBtn.Text = "Apply"
    applyBtn.TextColor3 = colors.text
    applyBtn.BackgroundColor3 = colors.primary
    applyBtn.BorderSizePixel = 0
    applyBtn.Font = Enum.Font.Gotham
    applyBtn.TextSize = 14
    applyBtn.Parent = frame
    
    local applyCorner = Instance.new("UICorner")
    applyCorner.CornerRadius = UDim.new(0, 4)
    applyCorner.Parent = applyBtn
    
    addHoverEffect(applyBtn, Color3.fromRGB(75, 150, 230), colors.primary)
    
    applyBtn.MouseButton1Click:Connect(function()
        local r = math.clamp(tonumber(rInput.Text) or 0, 0, 255) / 255
        local g = math.clamp(tonumber(gInput.Text) or 0, 0, 255) / 255
        local b = math.clamp(tonumber(bInput.Text) or 0, 0, 255) / 255
        local newColor = Color3.new(r, g, b)
        preview.BackgroundColor3 = newColor
        callback(newColor)
    end)
end

-- Create a number input
function createNumberInput(label, value, position, parent)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.4, 0, 0, 30)
    frame.Position = position
    frame.BackgroundTransparency = 1
    frame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.3, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = label
    label.TextColor3 = colors.text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local input = Instance.new("TextBox")
    input.Size = UDim2.new(0.7, 0, 1, 0)
    input.Position = UDim2.new(0.3, 0, 0, 0)
    input.Text = tostring(value)
    input.TextColor3 = colors.darkText
    input.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    input.BorderSizePixel = 0
    input.Font = Enum.Font.Gotham
    input.TextSize = 14
    input.Parent = frame
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 4)
    inputCorner.Parent = input
    
    return input
end

-- Create a slider
function createSlider(parent, name, value, min, max, yPos, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -20, 0, 50)
    frame.Position = UDim2.new(0, 10, 0, yPos)
    frame.BackgroundTransparency = 1
    frame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = name .. ": " .. string.format("%.2f", value)
    label.TextColor3 = colors.text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local slider = Instance.new("Frame")
    slider.Size = UDim2.new(1, 0, 0, 10)
    slider.Position = UDim2.new(0, 0, 0, 30)
    slider.BackgroundColor3 = Color3.fromRGB(80, 80, 90)
    slider.BorderSizePixel = 0
    slider.Parent = frame
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(1, 0)
    sliderCorner.Parent = slider
    
    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = colors.primary
    fill.BorderSizePixel = 0
    fill.Parent = slider
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = fill
    
    local dragging = false
    
    slider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input.Position.X)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input.Position.X)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    function updateSlider(xPos)
        local relativeX = (xPos - slider.AbsolutePosition.X) / slider.AbsoluteSize.X
        relativeX = math.clamp(relativeX, 0, 1)
        local newValue = min + relativeX * (max - min)
        
        fill.Size = UDim2.new(relativeX, 0, 1, 0)
        label.Text = name .. ": " .. string.format("%.2f", newValue)
        callback(newValue)
    end
end

-- Create a toggle switch
function createToggle(parent, name, value, yPos, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, -20, 0, 40)
    frame.Position = UDim2.new(0, 10, 0, yPos)
    frame.BackgroundTransparency = 1
    frame.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.Text = name
    label.TextColor3 = colors.text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame
    
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 50, 0, 25)
    toggle.Position = UDim2.new(0.7, 0, 0.5, -12.5)
    toggle.Text = ""
    toggle.BackgroundColor3 = value and colors.success or colors.secondary
    toggle.BorderSizePixel = 0
    toggle.Parent = frame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(1, 0)
    toggleCorner.Parent = toggle
    
    local knob = Instance.new("Frame")
    knob.Size = UDim2.new(0, 20, 0, 20)
    knob.Position = value and UDim2.new(1, -22, 0.5, -10) or UDim2.new(0, 2, 0.5, -10)
    knob.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
    knob.BorderSizePixel = 0
    knob.Parent = toggle
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(1, 0)
    knobCorner.Parent = knob
    
    toggle.MouseButton1Click:Connect(function()
        local newValue = not value
        toggle.BackgroundColor3 = newValue and colors.success or colors.secondary
        knob.Position = newValue and UDim2.new(1, -22, 0.5, -10) or UDim2.new(0, 2, 0.5, -10)
        callback(newValue)
    end)
end

-- Create an effect button
function createEffectButton(text, yPos, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -20, 0, 30)
    button.Position = UDim2.new(0, 10, 0, yPos)
    button.Text = text
    button.TextColor3 = colors.text
    button.BackgroundColor3 = colors.secondary
    button.BorderSizePixel = 0
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.Parent = parent
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = button
    
    addHoverEffect(button, Color3.fromRGB(90, 100, 120), colors.secondary)
    
    return button
end

-- Set up scripts tab
local scriptsContent = tabContents["Scripts"]
local scriptEditor = Instance.new("ScrollingFrame")
scriptEditor.Name = "ScriptEditor"
scriptEditor.Size = UDim2.new(1, 0, 1, -100)
scriptEditor.Position = UDim2.new(0, 0, 0, 0)
scriptEditor.BackgroundColor3 = Color3.fromRGB(40, 45, 55)
scriptEditor.BorderSizePixel = 0
scriptEditor.ScrollBarThickness = 8
scriptEditor.CanvasSize = UDim2.new(0, 0, 0, 0)
scriptEditor.Parent = scriptsContent

local scriptInput = Instance.new("TextBox")
scriptInput.Name = "ScriptInput"
scriptInput.Size = UDim2.new(1, -10, 1, -10)
scriptInput.Position = UDim2.new(0, 5, 0, 5)
scriptInput.Text = "-- Add your script here\n-- Use 'element' to reference the selected element\nprint(\"Button clicked!\")\nelement.Text = \"Clicked!\""
scriptInput.TextColor3 = colors.text
scriptInput.BackgroundTransparency = 1
scriptInput.TextXAlignment = Enum.TextXAlignment.Left
scriptInput.TextYAlignment = Enum.TextYAlignment.Top
scriptInput.Font = Enum.Font.Code
scriptInput.TextSize = 14
scriptInput.TextWrapped = true
scriptInput.MultiLine = true
scriptInput.ClearTextOnFocus = false
scriptInput.Parent = scriptEditor

local applyScriptBtn = Instance.new("TextButton")
applyScriptBtn.Size = UDim2.new(1, -20, 0, 40)
applyScriptBtn.Position = UDim2.new(0, 10, 1, -50)
applyScriptBtn.Text = "üíæ Apply Script to Element"
applyScriptBtn.TextColor3 = colors.text
applyScriptBtn.BackgroundColor3 = colors.success
applyScriptBtn.BorderSizePixel = 0
applyScriptBtn.Font = Enum.Font.GothamBold
applyScriptBtn.TextSize = 14
applyScriptBtn.Parent = scriptsContent

local applyCorner = Instance.new("UICorner")
applyCorner.CornerRadius = UDim.new(0, 8)
applyCorner.Parent = applyScriptBtn

addHoverEffect(applyScriptBtn, Color3.fromRGB(90, 210, 130), colors.success)

applyScriptBtn.MouseButton1Click:Connect(function()
    if selectedElement and selectedElement:IsA("TextButton") then
        local scriptText = scriptInput.Text
        
        -- Create a new script for the button
        local clickScript = Instance.new("LocalScript")
        clickScript.Name = "ClickScript"
        clickScript.Source = string.format([[
            local element = script.Parent
            element.MouseButton1Click:Connect(function()
                %s
            end)
        ]], scriptText)
        
        clickScript.Parent = selectedElement
    end
end)

-- Keyboard shortcuts
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Delete and selectedElement then
        selectedElement:Destroy()
        selectedElement = nil
        updatePropertiesTab()
    elseif input.KeyCode == Enum.KeyCode.F1 then
        designerGui.Enabled = not designerGui.Enabled
    end
end)

-- Initial notification
local function showNotification(text, color)
    -- Simple notification implementation
    print("UI Designer: " .. text)
end

showNotification("üé® UI Designer Pro loaded! Press F1 to toggle", colors.primary)

-- Make the script return something useful
return {
    gui = designerGui,
    selectElement = function(element)
        selectElement(element)
        switchTab("Properties")
    end,
    getSelectedElement = function()
        return selectedElement
    end
}
