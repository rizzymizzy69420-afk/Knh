-- Rayfield UI Library (Delta Executor Compatible + Templates)
-- Put this in your GitHub raw file

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

local Rayfield = {}

-- Configuration
local Config = {
    WindowSize = UDim2.new(0, 580, 0, 460),
    Colors = {
        Background = Color3.fromRGB(25, 25, 25),
        Sidebar = Color3.fromRGB(20, 20, 20),
        Primary = Color3.fromRGB(66, 134, 244),
        Secondary = Color3.fromRGB(40, 40, 40),
        Text = Color3.fromRGB(255, 255, 255),
        SubText = Color3.fromRGB(200, 200, 200),
        Border = Color3.fromRGB(60, 60, 60)
    },
    Animations = {
        Standard = TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out),
        Fast = TweenInfo.new(0.15, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    }
}

-- Utility Functions
local function CreateTween(object, info, properties)
    local tween = TweenService:Create(object, info, properties)
    return tween
end

local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function CreateStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Config.Colors.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

-- Main Library Functions
function Rayfield:CreateWindow(windowConfig)
    local Window = {
        Tabs = {},
        CurrentTab = nil,
        MainFrame = nil,
        ScreenGui = nil,
        IsVisible = true
    }
    
    -- Destroy existing GUIs
    if PlayerGui:FindFirstChild("RayfieldUI") then
        PlayerGui:FindFirstChild("RayfieldUI"):Destroy()
    end
    if PlayerGui:FindFirstChild("RayfieldRestore") then
        PlayerGui:FindFirstChild("RayfieldRestore"):Destroy()
    end
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "RayfieldUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.IgnoreGuiInset = true
    ScreenGui.Parent = PlayerGui
    
    Window.ScreenGui = ScreenGui
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = Config.WindowSize
    MainFrame.Position = UDim2.new(0.5, -290, 0.5, -230)
    MainFrame.BackgroundColor3 = Config.Colors.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Parent = ScreenGui
    CreateCorner(MainFrame, 12)
    CreateStroke(MainFrame, Config.Colors.Border, 1)
    
    Window.MainFrame = MainFrame
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 50)
    TitleBar.BackgroundColor3 = Config.Colors.Sidebar
    TitleBar.BorderSizePixel = 0
    TitleBar.Active = true
    TitleBar.Parent = MainFrame
    CreateCorner(TitleBar, 12)
    
    -- Fix corner overlap
    local TitleBarFix = Instance.new("Frame")
    TitleBarFix.Size = UDim2.new(1, 0, 0, 12)
    TitleBarFix.Position = UDim2.new(0, 0, 1, -12)
    TitleBarFix.BackgroundColor3 = Config.Colors.Sidebar
    TitleBarFix.BorderSizePixel = 0
    TitleBarFix.Parent = TitleBar
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "Title"
    TitleLabel.Size = UDim2.new(1, -70, 1, 0)
    TitleLabel.Position = UDim2.new(0, 20, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = windowConfig.Name or "Rayfield"
    TitleLabel.TextColor3 = Config.Colors.Text
    TitleLabel.TextSize = 18
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.TextYAlignment = Enum.TextYAlignment.Center
    TitleLabel.Parent = TitleBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "Close"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -40, 0.5, -15)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "Ã—"
    CloseButton.TextColor3 = Config.Colors.Text
    CloseButton.TextSize = 20
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.Active = true
    CloseButton.Parent = TitleBar
    CreateCorner(CloseButton, 6)
    
    -- Sidebar
    local Sidebar = Instance.new("ScrollingFrame")
    Sidebar.Name = "Sidebar"
    Sidebar.Size = UDim2.new(0, 150, 1, -50)
    Sidebar.Position = UDim2.new(0, 0, 0, 50)
    Sidebar.BackgroundColor3 = Config.Colors.Sidebar
    Sidebar.BorderSizePixel = 0
    Sidebar.ScrollBarThickness = 0
    Sidebar.CanvasSize = UDim2.new(0, 0, 0, 0)
    Sidebar.Active = true
    Sidebar.Parent = MainFrame
    
    local SidebarList = Instance.new("UIListLayout")
    SidebarList.SortOrder = Enum.SortOrder.LayoutOrder
    SidebarList.Padding = UDim.new(0, 5)
    SidebarList.Parent = Sidebar
    
    local SidebarPadding = Instance.new("UIPadding")
    SidebarPadding.PaddingTop = UDim.new(0, 10)
    SidebarPadding.PaddingBottom = UDim.new(0, 10)
    SidebarPadding.PaddingLeft = UDim.new(0, 10)
    SidebarPadding.PaddingRight = UDim.new(0, 10)
    SidebarPadding.Parent = Sidebar
    
    -- Auto-resize sidebar
    SidebarList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        Sidebar.CanvasSize = UDim2.new(0, 0, 0, SidebarList.AbsoluteContentSize.Y + 20)
    end)
    
    -- Content Area
    local Content = Instance.new("Frame")
    Content.Name = "Content"
    Content.Size = UDim2.new(1, -150, 1, -50)
    Content.Position = UDim2.new(0, 150, 0, 50)
    Content.BackgroundTransparency = 1
    Content.Parent = MainFrame
    
    -- Dragging system
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X, 
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Restore Button Creation Function
    local function createRestoreButton()
        local RestoreGui = Instance.new("ScreenGui")
        RestoreGui.Name = "RayfieldRestore"
        RestoreGui.ResetOnSpawn = false
        RestoreGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        RestoreGui.IgnoreGuiInset = true
        RestoreGui.Parent = PlayerGui
        
        local RestoreButton = Instance.new("TextButton")
        RestoreButton.Name = "RestoreButton"
        RestoreButton.Size = UDim2.new(0, 120, 0, 30)
        RestoreButton.Position = UDim2.new(0.5, -60, 0, 10)
        RestoreButton.BackgroundColor3 = Config.Colors.Primary
        RestoreButton.BorderSizePixel = 0
        RestoreButton.Text = "Show UI"
        RestoreButton.TextColor3 = Config.Colors.Text
        RestoreButton.TextSize = 14
        RestoreButton.Font = Enum.Font.SourceSansBold
        RestoreButton.Active = true
        RestoreButton.Parent = RestoreGui
        CreateCorner(RestoreButton, 8)
        
        -- Fixed restore functionality
        RestoreButton.MouseButton1Click:Connect(function()
            -- Destroy restore button first
            RestoreGui:Destroy()
            
            -- Reset main frame properties
            MainFrame.Size = Config.WindowSize
            MainFrame.Position = UDim2.new(0.5, -290, 0.5, -230)
            
            -- Make sure ScreenGui is properly parented and visible
            ScreenGui.Parent = PlayerGui
            ScreenGui.Enabled = true
            MainFrame.Visible = true
            
            Window.IsVisible = true
        end)
        
        -- Hover effects
        RestoreButton.MouseEnter:Connect(function()
            CreateTween(RestoreButton, Config.Animations.Fast, {
                BackgroundColor3 = Color3.fromRGB(86, 154, 255)
            }):Play()
        end)
        
        RestoreButton.MouseLeave:Connect(function()
            CreateTween(RestoreButton, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Primary
            }):Play()
        end)
    end
    
    -- Close button functionality (FIXED)
    CloseButton.MouseButton1Click:Connect(function()
        Window.IsVisible = false
        
        local closeTween = CreateTween(MainFrame, Config.Animations.Standard, {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        })
        closeTween:Play()
        
        closeTween.Completed:Connect(function()
            ScreenGui.Enabled = false
            createRestoreButton()
        end)
    end)
    
    -- Window methods
    function Window:CreateTab(tabConfig)
        local Tab = {
            Elements = {},
            Container = nil,
            Button = nil
        }
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = tabConfig.Name
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        TabButton.BackgroundColor3 = Config.Colors.Secondary
        TabButton.BorderSizePixel = 0
        TabButton.Text = tabConfig.Name
        TabButton.TextColor3 = Config.Colors.SubText
        TabButton.TextSize = 14
        TabButton.Font = Enum.Font.SourceSans
        TabButton.Active = true
        TabButton.Parent = Sidebar
        CreateCorner(TabButton, 6)
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = tabConfig.Name .. "Content"
        TabContent.Size = UDim2.new(1, -20, 1, -20)
        TabContent.Position = UDim2.new(0, 10, 0, 10)
        TabContent.BackgroundTransparency = 1
        TabContent.ScrollBarThickness = 4
        TabContent.ScrollBarImageColor3 = Config.Colors.Primary
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.Visible = false
        TabContent.Active = true
        TabContent.Parent = Content
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 8)
        ContentList.Parent = TabContent
        
        local ContentPadding = Instance.new("UIPadding")
        ContentPadding.PaddingTop = UDim.new(0, 5)
        ContentPadding.PaddingBottom = UDim.new(0, 5)
        ContentPadding.Parent = TabContent
        
        -- Auto-resize content
        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 20)
        end)
        
        Tab.Container = TabContent
        Tab.Button = TabButton
        
        -- Tab switching
        TabButton.MouseButton1Click:Connect(function()
            -- Hide all tabs
            for _, tab in pairs(Window.Tabs) do
                tab.Container.Visible = false
                CreateTween(tab.Button, Config.Animations.Fast, {
                    BackgroundColor3 = Config.Colors.Secondary,
                    TextColor3 = Config.Colors.SubText
                }):Play()
            end
            
            -- Show selected tab
            TabContent.Visible = true
            Window.CurrentTab = Tab
            CreateTween(TabButton, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Primary,
                TextColor3 = Config.Colors.Text
            }):Play()
        end)
        
        -- Hover effects
        TabButton.MouseEnter:Connect(function()
            if Window.CurrentTab ~= Tab then
                CreateTween(TabButton, Config.Animations.Fast, {
                    BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                }):Play()
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if Window.CurrentTab ~= Tab then
                CreateTween(TabButton, Config.Animations.Fast, {
                    BackgroundColor3 = Config.Colors.Secondary
                }):Play()
            end
        end)
        
        -- FIXED: Tab methods with proper element creation
        function Tab:CreateButton(buttonConfig)
            local ButtonContainer = Instance.new("Frame")
            ButtonContainer.Name = "ButtonContainer"
            ButtonContainer.Size = UDim2.new(1, 0, 0, 35)
            ButtonContainer.BackgroundTransparency = 1
            ButtonContainer.Parent = TabContent
            
            local Button = Instance.new("TextButton")
            Button.Name = "Button"
            Button.Size = UDim2.new(1, 0, 1, 0)
            Button.Position = UDim2.new(0, 0, 0, 0)
            Button.BackgroundColor3 = Config.Colors.Secondary
            Button.BorderSizePixel = 0
            Button.Text = buttonConfig.Name or "Button"
            Button.TextColor3 = Config.Colors.Text
            Button.TextSize = 14
            Button.Font = Enum.Font.SourceSans
            Button.Active = true
            Button.Parent = ButtonContainer
            CreateCorner(Button, 6)
            
            Button.MouseButton1Click:Connect(function()
                CreateTween(Button, Config.Animations.Fast, {BackgroundColor3 = Config.Colors.Primary}):Play()
                wait(0.1)
                CreateTween(Button, Config.Animations.Fast, {BackgroundColor3 = Config.Colors.Secondary}):Play()
                
                if buttonConfig.Callback then
                    spawn(buttonConfig.Callback)
                end
            end)
            
            Button.MouseEnter:Connect(function()
                CreateTween(Button, Config.Animations.Fast, {
                    BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                }):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                CreateTween(Button, Config.Animations.Fast, {
                    BackgroundColor3 = Config.Colors.Secondary
                }):Play()
            end)
            
            return ButtonContainer
        end
        
        function Tab:CreateToggle(toggleConfig)
            local ToggleContainer = Instance.new("Frame")
            ToggleContainer.Name = "ToggleContainer"
            ToggleContainer.Size = UDim2.new(1, 0, 0, 35)
            ToggleContainer.BackgroundColor3 = Config.Colors.Secondary
            ToggleContainer.BorderSizePixel = 0
            ToggleContainer.Parent = TabContent
            CreateCorner(ToggleContainer, 6)
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(1, 0, 1, 0)
            ToggleButton.BackgroundTransparency = 1
            ToggleButton.Text = ""
            ToggleButton.Active = true
            ToggleButton.Parent = ToggleContainer
            
            local ToggleLabel = Instance.new("TextLabel")
            ToggleLabel.Size = UDim2.new(1, -50, 1, 0)
            ToggleLabel.Position = UDim2.new(0, 15, 0, 0)
            ToggleLabel.BackgroundTransparency = 1
            ToggleLabel.Text = toggleConfig.Name or "Toggle"
            ToggleLabel.TextColor3 = Config.Colors.Text
            ToggleLabel.TextSize = 14
            ToggleLabel.Font = Enum.Font.SourceSans
            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            ToggleLabel.TextYAlignment = Enum.TextYAlignment.Center
            ToggleLabel.Parent = ToggleContainer
            
            local ToggleSlider = Instance.new("Frame")
            ToggleSlider.Size = UDim2.new(0, 30, 0, 16)
            ToggleSlider.Position = UDim2.new(1, -40, 0.5, -8)
            ToggleSlider.BackgroundColor3 = Config.Colors.Border
            ToggleSlider.BorderSizePixel = 0
            ToggleSlider.Parent = ToggleContainer
            CreateCorner(ToggleSlider, 8)
            
            local ToggleIndicator = Instance.new("Frame")
            ToggleIndicator.Size = UDim2.new(0, 12, 0, 12)
            ToggleIndicator.Position = UDim2.new(0, 2, 0.5, -6)
            ToggleIndicator.BackgroundColor3 = Config.Colors.Text
            ToggleIndicator.BorderSizePixel = 0
            ToggleIndicator.Parent = ToggleSlider
            CreateCorner(ToggleIndicator, 6)
            
            local isToggled = toggleConfig.Default or false
            
            local function updateToggle()
                if isToggled then
                    CreateTween(ToggleSlider, Config.Animations.Fast, {BackgroundColor3 = Config.Colors.Primary}):Play()
                    CreateTween(ToggleIndicator, Config.Animations.Fast, {Position = UDim2.new(1, -14, 0.5, -6)}):Play()
                else
                    CreateTween(ToggleSlider, Config.Animations.Fast, {BackgroundColor3 = Config.Colors.Border}):Play()
                    CreateTween(ToggleIndicator, Config.Animations.Fast, {Position = UDim2.new(0, 2, 0.5, -6)}):Play()
                end
            end
            
            ToggleButton.MouseButton1Click:Connect(function()
                isToggled = not isToggled
                updateToggle()
                
                if toggleConfig.Callback then
                    spawn(function()
                        toggleConfig.Callback(isToggled)
                    end)
                end
            end)
            
            updateToggle()
            return ToggleContainer
        end
        
        function Tab:CreateSlider(sliderConfig)
            local SliderContainer = Instance.new("Frame")
            SliderContainer.Name = "SliderContainer"
            SliderContainer.Size = UDim2.new(1, 0, 0, 50)
            SliderContainer.BackgroundColor3 = Config.Colors.Secondary
            SliderContainer.BorderSizePixel = 0
            SliderContainer.Parent = TabContent
            CreateCorner(SliderContainer, 6)
            
            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Size = UDim2.new(1, -60, 0, 25)
            SliderLabel.Position = UDim2.new(0, 15, 0, 0)
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Text = sliderConfig.Name or "Slider"
            SliderLabel.TextColor3 = Config.Colors.Text
            SliderLabel.TextSize = 14
            SliderLabel.Font = Enum.Font.SourceSans
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            SliderLabel.TextYAlignment = Enum.TextYAlignment.Center
            SliderLabel.Parent = SliderContainer
            
            local SliderValue = Instance.new("TextLabel")
            SliderValue.Size = UDim2.new(0, 50, 0, 25)
            SliderValue.Position = UDim2.new(1, -60, 0, 0)
            SliderValue.BackgroundTransparency = 1
            SliderValue.Text = tostring(sliderConfig.Min or 0)
            SliderValue.TextColor3 = Config.Colors.Primary
            SliderValue.TextSize = 12
            SliderValue.Font = Enum.Font.SourceSansBold
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right
            SliderValue.TextYAlignment = Enum.TextYAlignment.Center
            SliderValue.Parent = SliderContainer
            
            local SliderTrack = Instance.new("TextButton")
            SliderTrack.Size = UDim2.new(1, -30, 0, 4)
            SliderTrack.Position = UDim2.new(0, 15, 1, -15)
            SliderTrack.BackgroundColor3 = Config.Colors.Border
            SliderTrack.BorderSizePixel = 0
            SliderTrack.Text = ""
            SliderTrack.Active = true
            SliderTrack.Parent = SliderContainer
            CreateCorner(SliderTrack, 2)
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new(0, 0, 1, 0)
            SliderFill.BackgroundColor3 = Config.Colors.Primary
            SliderFill.BorderSizePixel = 0
            SliderFill.Parent = SliderTrack
            CreateCorner(SliderFill, 2)
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Size = UDim2.new(0, 12, 0, 12)
            SliderButton.Position = UDim2.new(0, -6, 0.5, -6)
            SliderButton.BackgroundColor3 = Config.Colors.Primary
            SliderButton.BorderSizePixel = 0
            SliderButton.Text = ""
            SliderButton.Active = true
            SliderButton.Parent = SliderTrack
            CreateCorner(SliderButton, 6)
            
            local currentValue = sliderConfig.Default or sliderConfig.Min or 0
            local dragging = false
            
            local function updateSlider(value)
                local min = sliderConfig.Min or 0
                local max = sliderConfig.Max or 100
                value = math.clamp(value, min, max)
                
                local percentage = (value - min) / (max - min)
                SliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                SliderButton.Position = UDim2.new(percentage, -6, 0.5, -6)
                SliderValue.Text = tostring(math.floor(value + 0.5))
                currentValue = value
                
                if sliderConfig.Callback then
                    spawn(function()
                        sliderConfig.Callback(value)
                    end)
                end
            end
            
            local function onInput(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end
            
            SliderButton.InputBegan:Connect(onInput)
            SliderTrack.InputBegan:Connect(onInput)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mousePos = UserInputService:GetMouseLocation().X
                    local trackPos = SliderTrack.AbsolutePosition.X
                    local trackSize = SliderTrack.AbsoluteSize.X
                    local percentage = math.clamp((mousePos - trackPos) / trackSize, 0, 1)
                    
                    local min = sliderConfig.Min or 0
                    local max = sliderConfig.Max or 100
                    local newValue = min + (percentage * (max - min))
                    updateSlider(newValue)
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            updateSlider(currentValue)
            return SliderContainer
        end
        
        Window.Tabs[#Window.Tabs + 1] = Tab
        
        -- Auto-select first tab
        if #Window.Tabs == 1 then
            wait(0.1)
            TabButton.MouseButton1Click()
        end
        
        return Tab
    end
    
    return Window
end

--[[
===== TEMPLATES FOR USING THIS LIBRARY =====

-- Basic Window Creation
local Rayfield = loadstring(game:HttpGet("YOUR_GITHUB_RAW_LINK"))()

local Window = Rayfield:CreateWindow({
    Name = "My Script Hub"
})

-- Creating Tabs
local Tab1 = Window:CreateTab({
    Name = "Main"
})

local Tab2 = Window:CreateTab({
    Name = "Settings"
})

-- Adding Buttons
Tab1:CreateButton({
    Name = "Test Button",
    Callback = function()
        print("Button clicked!")
    end
})

-- Adding Toggles
Tab1:CreateToggle({
    Name = "Auto Farm",
    Default = false,
    Callback = function(value)
        print("Toggle value:", value)
        if value then
            print("Auto Farm enabled!")
        else
            print("Auto Farm disabled!")
        end
    end
})

-- Adding Sliders
Tab1:CreateSlider({
    Name = "Speed",
    Min = 1,
    Max = 100,
    Default = 16,
    Callback = function(value)
        print("Slider value:", value)
        -- Your speed code here
    end
})

-- Example Full Script Template:
local Rayfield = loadstring(game:HttpGet("YOUR_GITHUB_RAW_LINK"))()

local Window = Rayfield:CreateWindow({
    Name = "Utility Hub"
})

local MainTab = Window:CreateTab({
    Name = "Main"
})

local flyEnabled = false
local speed = 16

MainTab:CreateToggle({
    Name = "Fly",
    Default = false,
    Callback = function(value)
        flyEnabled = value
        if value then
            -- Enable fly code
            print("Fly enabled")
        else
            -- Disable fly code
            print("Fly disabled")
        end
    end
})

MainTab:CreateSlider({
    Name = "Fly Speed",
    Min = 10,
    Max = 200,
    Default = 50,
    Callback = function(value)
        speed = value
        print("Speed set to:", value)
    end
})

MainTab:CreateButton({
    Name = "Reset Character",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Dead)
    end
})

--]]

return Rayfield
